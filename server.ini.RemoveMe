; Configuration details are discussed in the document InstallingTheTatinServer.html

; Notes:
; * You may use "<INIFILE>" in any path in order to refer to the folder this log files lives in.
; * You may use "<TEMP>" in any path in order to refer to the temp folder of the current OS

home                = '<INIFILE>/'          ; This is a variable local to this INI file. Can be referenced with {home}

[CONFIG]
AppName             = 'PlodderForTatin'
DisplayRequests     = 0                     ; 1 makes Rumba display every request in a ⎕ED windows. For debugging only of course.
LogHTTPToSession    = 0                     ; Naturally only useful in development
MaxNoOfThreads      = 64
Port                = 0                     ; 0 becomes 443 in case of "Secure=1" and 80 otherwise; other values survive.
BaseTagPort         = 0                     ; 0 means: do not inject a port number into the HTML meta base tag. If it is non-zero that port IS injected.
Secure              = 1                     ; 1 for https and 0 for http
Registry            = '{home}../Registry/'  ; Where does the data (the Registry) live?
Base                = 'localhost'           ; The domain name without the protocol; port number is added by Tatin in case a non-standard port is used
Title               = 'Tatin'               ; Window title (Browser)
Caption             = 'Tatin Registry'      ; <h1> of HTML pages
TestFlag            = 0                     ; If 1 a couple of commands are available as REST requests
ReloadWS            = 1                     ; Reload the server WS in case a better version is detected on disk
HTDOCS              = '{home}'              ; Defines where the static files live (CSS, IMGs...)
DeletePackages      = 0                     ; 0=not allowed; 1=allowed; 2=only beta versions (major=0);
MinimumTatinVersion = '0.72'                ; Minimum version of Tatin required on the client side (major or major.minor)
SpecialCommands     = 0                     ; Active only ever for a test server, never in production
GroupHomePages      = 0                     ; 1=Allow owners to save a group home page


[HTMLBACKGROUND]
image               = ''                    ; Set this to tatin.png for a test server
color:              = '#FFFFF0'             ; Set this to #FFFFF0 for a production server


[MSG]				; Use this to put a general msg (maintanence etc.) on _every_ page. Ignored when "Text" is empty. Might be nested.
Text                = ''
CSS                 = 'font-size: large; font-weight: bold; border: 2px solid silver; padding: 5px 15px; margin: 15px 0; background-color: chocolate;'


[LOGGING]
; Application level (standard log file)
Folder              = '{home}../ServerData/Logs/'    ; Hosts the log files, if any
; The following entries make Rumba log stuff; useful for debugging but not for production.
Log                 = 1     ; Application-level logging should always be on so that we can provide usage data;
LogHTTP             = 0
LogConga            = 0
LogRumba            = 0

; The following entry makes Tatin log to the Windows Event Log
WindowsEventLog     = ¯1     ; ¯1 = Write Start/Stop/Error events to Windows Event Log in Runtime;  1: write;  0=never;  ignored on non-Windows


[CERTIFICATES]                              ; The following settings are ignored in case CONFIG.Secure is 0
PublicCertFile      = '{home}Assets/Runtime/Certificates/myserver-cert.pem'
PrivateKeyFile      = '{home}Assets/Runtime/Certificates/myserver-key.pem'
CertType            = 'DER'


[EVENTS]                        ; These are events send by Rumba to quit ⎕DQ or to broadcasts events ("Pause" and "Continue" when running as a Windows Service)
QuitEvent           = 9876
PauseEvent          = 9877
ContinueEvent       = 9878

[RIDE]
active              = 0
port                = 4502
address             = '*'           
wait                = 1             ; If 1 wait for the user in an endless loop

[TRAP]
Folder              = '{home}../wServerData/Errors'    ; Crash file, HTML report etc.
Policy              = ¯1        ; ¯1=General error trapping in Runtime but not otherwise; 1=Trap and 0=don't trap. General means "above" Rumba
Rumba               = 1         ; This has an effect only in development. Rumba traps all errors in Runtime in any case.


[APP]                                                  ; Change the following settings according to your needs:
Context             = '#.Tatin.Server'                 ; Where in the workspace does the application live?  (Ideally outside Plodder)
OnStart             = 'OnStart'                        ; Once called when the server starts
;OnHeader           = 'OnHeader'                       ; Especially useful for handling "Expect" with value "100-continue"
OnRequest           = 'OnRequest'                      ; Called in the event of a request. Setting this is mandatory
OnCongaTimeout      = 'OnHouseKeeping'                 ; Do any housekeeping here


[EMAIL]             ; Tatin can send emails in case of crashes
Active              = 1      			       ; On/off toggle for crash emails
Domain              = '?'                              ; Used in the subject line  (*)
SMTP_Server         = ''                               ; For example: smtp.gmail.com'
Port                = 465
From                = 'do-not-reply@your-domain.comv'  ; Sender of crash emails
To                  = 'some-address@gmail.com'         ; Receiver of crash emails (*)
Password            = '?'                              ; Must fit to "SendTo" which is also used as User-ID on the SMTP server
;Body                = 'The Tatin server running at "<DOMAIN>" has crashed; see attached crash report'
Body                = 'The Tatin server running at "<DOMAIN>" has crashed'
CC                  = ''
CC                 ,= '?'                              ; Receiver of crash emails
;CC                ,= '?'                              ; Receiver of crash emails

; *: "Domain" and "To" are displayed on each HTML page in the footer if both are not empty