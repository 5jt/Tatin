 r←{list}ListPackages(uri parms);packageID;registryPath;fuzzy;tags;list;noOfHyphens;noOfDots;uniqueIDs
⍝ Documentation see ##.Client.ListPackages
 'No registry specified'Assert 0<≢uri
 r←0 2⍴⍬
 (registryPath packageID)←SeparateUriAndPackageID uri
 registryPath←F.ExpandPath registryPath
 'Neither an alias nor a path?!'Assert F.IsDir registryPath
 :If 0=⎕NC'list'
     list←GetAllPackages registryPath
 :EndIf
 :If 2=parms.⎕NC'tags'
 :AndIf 0<≢parms.tags
     tags←','(≠⊆⊢)⎕C parms.tags
     (fuzzy list)←parms.aggregate FindTag registryPath tags list
 :EndIf
 :If 2=parms.⎕NC'group'
 :AndIf 0<≢parms.group
     list←(parms.group∘≡¨GetGroupFromPackageID¨list)/list
 :EndIf
 :If 0=≢packageID~'*'
     :If parms.aggregate
         r←AggregatePackages list
     :Else
         r←list,[1.5]⊂⍬
     :EndIf
 :Else
     noOfHyphens←'-'+.=packageID
     :Select noOfHyphens
     :Case 0                        ⍝ Just the group
         :If 0<≢list←((packageID,'-')∘≡¨{⍵↑⍨⍵⍳'-'}¨list)⌿list
             :If parms.aggregate
                 r←AggregatePackages list
             :Else
                 r←list,[1.5]⊂⍬
             :EndIf
         :EndIf
     :Case 1                        ⍝ group and name
         :If 0<≢list←((packageID,'-')∘≡¨(RemoveVersionNumber¨list),¨'-')⌿list
             :If parms.aggregate
                 r←AggregatePackages list
             :Else
                 r←list,[1.5]⊂⍬
             :EndIf
         :EndIf
     :Case 2                        ⍝ group, name and version
         noOfDots←'.'+.=packageID
         :Select noOfDots
         :Case 0                    ⍝ Just major
             :If 0<≢list←((packageID,'.')∘≡¨{⍵↑⍨⍵⍳'.'}¨list)⌿list
                 :If parms.aggregate
                     r←0 AggregatePackages list
                 :Else
                     r←list,[1.5]⊂⍬
                 :EndIf
             :EndIf
         :Case 1                    ⍝ major and minor
             :If 0<≢list←((packageID,'.')∘≡¨{'.',⍨⍵/⍨2>+\'.'=⍵}¨list)⌿list
                 :If parms.aggregate
                     r←⍉⍪{(1⊃⍵)(≢⍵)}RemovePatch¨list
                 :Else
                     r←list,[1.5]⊂⍬
                 :EndIf
             :EndIf
         :Else
             :If (⊂packageID)∊list   ⍝ verbatim
                 r←1 2⍴packageID ⍬
             :EndIf
         :EndSelect
     :EndSelect
 :EndIf
⍝Done
