 list←{reduceFlag}ListPackages(uri parms);packageID;registryPath;fuzzy;tags
⍝ Returns for each package found, either as {group}-{name}-{version} or just {group}-{name}-{major} dependening on ⍺.\\
⍝ In case the packageID is not part of the uri, all packages are returned.\\
⍝ By default `reduceFlag` is 1, meaning that the minor and patch numbers are removed and then all
⍝ duplicates are removed before the list is returnd.\\
⍝ If you want a list with all the versions pass a 0 as left argument.
 reduceFlag←{0<⎕NC ⍵:⍎⍵ ⋄ 1}'reduceFlag'
 'No registry specified'Assert 0<≢uri
 (registryPath packageID)←SeparateUriAndPackageID uri
 packageID←{0=≢⍵:'*' ⋄ ⍵}packageID
 registryPath←F.ExpandPath registryPath
 list←F.ListDirs registryPath ⍝ All package IDs
 list←{⊃,/1↓⎕NPARTS ⍵}¨list                     ⍝ Remove path: we only need the package IDs
 :If 0<≢packageID~'*'
     list←((packageID)∘{⍺≡(≢⍺)↑⍵}¨list)/list
 :EndIf
 :If 2=parms.⎕NC'tags'
 :AndIf 0<≢parms.tags
     tags←','(≠⊆⊢)⎕C parms.tags
     (fuzzy list)←reduceFlag FindTag registryPath tags list
 :EndIf
 :If 2=parms.⎕NC'group'
 :AndIf 0<≢parms.group
     list←(parms.group∘≡¨GetGroupFromPackageID¨list)/list
 :EndIf
 :If 0<≢list
     :If reduceFlag
         list←∪RemoveMinorAndPatch¨list                    ⍝ Get rid of minor and patch number but preserve major one
     :EndIf
 :EndIf
⍝Done
