* 0.45.0 ⋄ 2021-07-11
  * New Plodder allows managing Ride via the INI file.
* 0.44.0 ⋄ 2021-07-09
  * When neither an alias nor a valid path is specified then several methods (like `ListPackages`, `ListTags` etc)
    did not provide much help.
  * Problems with package aliasses and `LoacdPackage` solved.
  * When the WS was re-loaded due to a change on disk nothing was written to the log file.
  * When the INI file contained email-sending specifics it crashed.
* 0.43.0 ⋄ 2021-07-01
  * BREAKING CHANGE: INI files changes
  * The user command ]PublishPackage now checks the delete policy when a package has already been installed,
    and prompts the user whether it should overwrite that package if the policy is "Any".
  * Bug fixes:
    For the server a folder was still named `RunTime` rather than `Runtime`.
* 0.42.1 ⋄ 2021-06-28
  * Bug fixes
    * Typo in paths fixed: should have been "Runtime" but was "RunTime" which now hurts under non-Windows.
    * A Conga DLL for 3.3 was missing
* 0.42.0 ⋄ 2021-06-28
  * BREAKING CHANGE: uses a new version of Plodder and therefore also of Rumba
  * Now on Conga 3.3
  * The user command ]ReInstallDependencies now has a -force flag.
  * The Client now remembers servers it successfully reached.
  * Bug fixes
    * URLs with port numbers worked only on something like https://localhost:5001/ but not on
      https://localhost:5001/v1/command. On the latter a Conga error was reported due to an invalid argument.
    * `ReInstallDependencies` could not deal with a path without a trailing `/`.
    * A server in the process of shutting down might have crashed on a Conga 1010 error. 
* 0.41.0 ⋄ 2021-06-14
  * New API call / user command `Ping` introduced. 
  * Bug fixes
    * Scanning all defined registries crashed when one of those Registries did not respond with an error
      message that was not exactly helpful.
    * The version number shown on the HTML page was wrong in case of trailing zeros as in 1.40
* 0.40.1 ⋄ 2021-06-03
  * The server has a global variable ∆STARTED now.
  * Tatin did allow loading packages into sub namespaces of `⎕SE` but not `⎕SE` into itself.
    This restriction has been lifted.
  * Bug fixes:
    * `ProcessCredentials` did not handle correctly both a missing file and a file that contains nothing
      but `*=` (allow everything).
    * A credential file that contained a trailing blank as in `*= ` let to "Unautorised request" no matter what
    * Asking for a group list when no packages are yet published crashed a Tatin server
    * The workspace hash was calculated too early. Mattered only if the current dir is not already correct at
      that point.
    * `CheckForLaterVersion` was buggy
* 0.40.0 ⋄ 2021-05-23
  * The user command ]Tatin.ReInstallDependencies now has a flag -dry
  * User command help improved
  * Bug fixes
    * User command ]Tatin.ReInstallDependencies caused a VALUE ERROR.
    * VALUE ERROR in `Client.CheckAlias` fixed.
* 0.39.0 ⋄ 2021-05-12
  * Workspace docker-start.dws added which is required by a Tatin server running under Docker.
  * <h1> and message for the test server changed.
  * Additional menu item "Credential Report" added to the web site.
  * Credentials got redefined: now one can specify `group=''` in order to allow publishing to that group
    without API key.
  * The "List of all groups" page now shows the number of published packages per group.
* 0.38.2 ⋄ 2021-04-30
  * Column "Publishing Date" added to the HTML version list
  * Workaround implemented for the orphaned namespace problem (14888, <01851>).
  * Bug fixes
    * Sort order of the list of versions was still wrong on the HTML page
* 0.38.1 ⋄ 2021-04-25
  * `ListVersions` enhanced (API as well as user command)
  * Test case added for loading a package with an alias via HTTP.
  * Bug fixes
    * Sort order of ]ListVersions might have be wrong in case beta version were involved
    * A "?" as second argument to ]PublishPackage was not handled correctly
* 0.38.0 ⋄ 2021-04-24
  * The Tatin variables (CONFIG, HOME, ID, URL and possibly LX) are now all put into a namespace `TatinVars`.
    That minimizes the risk of a name clash greatly.
  * "Make" polished: APLTree scripts can now be updated.
* 0.37.0 ⋄ 2021-04-15
  * A Registry with a priority of 0 or lower let Tatin ignore that Registry when it scans Registries for
    a particular package. However, the user can still interact in the usual way with such a Registry.
  * The package config variable "project_url" was renamed into "info_url".\\\\
    Note that there is a (temporary) function `Helper.ReplaceProjectUrlByInfoUrl` available in #.Tatin.Admin 
    that can be used to rename "project_url" into "info_url" in a package together with the operator 
    `LoopThroughRegistry`.
  * The internal variable "depth" (used in build trees and also the build-list.json files) was renamed into
    "principal". 
  * When a new registry is added and there is no room anymore for a priority greater than 0, the priorities
    of all existing Registries are redefined.                                                              
  * Useful operator added to Tatin.Admin: `LoopThroughRegistry`
  * The test that searches for "⍝TODO⍝" and "⍝CHECK⍝" does not find itself anymore but remains readable.
* 0.36.0 ⋄ 2021-04-11
  * Breaking changes: 
    * The strategy how to collect dependencies has been changed
    * The Tatin "system variables" have been renamed. `∆HOME` is now `HOME` etc.
      The full list of renamed ("system") variables is `HOME`, `CONFIG`, `LX`, `ID`, `URI`.
  * Explicit result of `InstallPackage` changed.
  * `raw` added to `]CheckForLatestVersion`
  * Bug fixes:
    * When a principal package depends on a package that is "better" then an already installed as a
      dependency installed package then the better package did not win.
    * When a package was loaded or installed from the first with the highest priority then the servers were 
      not questioned according to the priorities for the dependencies.
    * The "Make" left the class `_Make` behind in both the Cleint and the Server workspace.
    * The "nobetas" option was processed incorrectly by `InstallPackages`.
    * HTML "base" was always "https" - must depend on INI entry [CONFIG]secure.
    * Nothing but "*=" in the Credentials file was not interpreted as intended: everybody anything.
    * `CheckForLatestVersion` did not process the `dependency` flag at all.
    * `CheckForLatestVersion` crashed on ZIP files.
    * `CheckVersion` and `EstablishRegistry` stumbled over defined Registries when the server did not respond.
    * Port number was not processed correctly when non-standard
* 0.35.0 ⋄ 2021-04-06
  * Experimental optional package config parameter "lx" added. 
  * -overwrite flag added the the ]LoadDependencies user command
  * The API function LoadDependencies now accepts an additional (optional) right argument: overwriteFlag
  * Revamped user settings
  * Explicit result of InstallPackage redefined
  * Bug fixes
    * Aliasse did not work on dependencies
    * Under some circumstances the build list was compiled incorrectly
    * Requesting a package with an alias via HTTP caused a problem
* 0.34.1 ⋄ 2021-03-31    
  * ]GetDeletePolicy polished
  * Bug fixes:
    * Report of HTTP errors unified, plus two bug fixes along the line
    * In case "group" or "name" in a config file was invalid a wrong error message was provided
    * Help for user command ]GetDeletePolicy was missing
    * Validating a full package ID sometimes yielded a wrong result
    * Link.Import replaced by `2 ⎕FIX` to avoid Link issue #253
     
      *** This implies that variables cannot be part of a package right now ***
* 0.34.0 ⋄ 2021-03-30
  * `CheckForLaterVersion` polished. In the process the right argument and the result got changed.
  * Bug fixes:
    * In the build list a URL could contain two slashes between URL and filename
    * When a principal package was better than a dependency then the older version was used by the 
      dependent anyway. (worked fine when no principal package was involved)
    * `UnInstallPackage` worked well on principal packages but not at all on packages that were not
      mentionend in the build list.
    * The Reload mechanism stopped working.
* 0.33.0 ⋄ 2021-03-24
  * `DeletePackage` implemented together with the user command equivalent ]Tatin.DeletePackage
  * Delete policies implemented: "None", "Any" and "JustBetas".
  * "Save package" polished.
  * Bug fixes
    * Column title of "ListTegistries" were wrong
* 0.32.2 ⋄ 2021-03-23
  * Bug fixes:
    * ]tatin.LoadTatin had a problem
    * In case a particular package was only available as beta version establishing the best version did
      not work. This required a change in strategy which affected `LoadPackage`, `InstallPackage`, their 
      user command equivalents and the user command ]ListPackages with -noaggr and its API equivalent.
* 0.32.1 ⋄ 2021-03-20
  * The user command ]TATIN.Pack has been redesigned: the arguments are now optional, and the 
    defaults are more sensible.
  * Documentation polished, in particular:
    1. Stub for syntax reference added
    2. "PackageConfiguration" improved 
  * Bug fixes:
    * "api" was not handled correctly when a package config file was edited.
* 0.32.0 ⋄ 2021-03-16
  * `ListPackages` now lists packages correctly ordered: either by version number (non-betas) or
    by publishing date (betas). This can also affect how `LoadPackage` and `InstallPackage` work if 
    there are beta versions.
  * User command `CheckForBetterVersion` renamed to `CheckForLaterVersion`
  * Bug fixes: 
    * When publishing, a Registry alias was converted too early, making it impossible to have 
      multiple aliasse for the same URL (useful for different API keys for different groups).
    * The server injected correctly the publishing data into the package config file but did not overwrite
      the package config file within the ZIP of that package, leaving it without "date" being set.
* 0.31.0 ⋄ 2021-03-01
  * New Client function `UninstallPackage` is available now.
  * New INI entry `MinimumTatinVersion` introduced. 
  * Class `UserSettings` polished
  * Bug fixes
    * `CheckBuidlList` called `SaveBuildList` without the new, additional "alias".
* 0.30.0 ⋄ 2021-02-28
  * BREAKING CHANGES: 
    * The code of a package is now loaded into a sub-namespace `code`. As a consequence package globals 
      (like HOME etc) must be addressed with `##.`
    * The user must now specify `source` in a package config file, otherwise an error is thrown. 
    * The `UserSettings` class was re-designed
    * The user settings file was moved from \\Local to \\Roaming (Windows only)
  * The property `alias` has been removed from the package config parameters\\\\
  * When loading or installing a package, and alais might be specified
  * When a package is published, "date" in the package config file is set by the server
  * In case Tatin cannot find the required Conga DLLs a helpful error message is printed to ⎕SE
  * The "special message" on the web pages is not printed anymore
  * Bug fixes
    * `]TATIN.PackageConfig` returned a matrix when it shouldn't
    * Checking the API for valid APL names failed in case the definition contained at least one comma
    * Failing checks on tags did not report what character was invalid
    * `⎕IO`, `⎕ML` and `⎕WX` inb a package config file are now scalars
* 0.22.2 ⋄ 2021-02-11
  * One may now specify just one of:
    * a package name 
    * group and package name
    * group, package name and major number
    * group, package name, major and minor number (without a Registry)
    ... and Tatin would work out first the Registry and then the best version.
  * ListTags prompts the user for a Registry now in the same way LoadPackage already did.
  * Bug fixes:
    * LoadPackage carried out a buggy check on a target namespace, resulting in # being rejected.
* 0.22.1 ⋄ 2021-02-09
  * `io`, `ml` and `wx` added to package config files.
  * Packages may be loaded into # now.
  * Result returned by `LoadDependencies` has changed: now package IDs of all top-level packages.
  * Bug fixes
    * Loading a ZIP file with dependencies was buggy.
    * A help request for ]LoadPackage crashed.
* 0.21.1 ⋄ 2021-02-07
  * The home page now offers a list with literally all packages
  * Defining the "api" of a package is much more flexible now since you can now specify multiple comma-
    separated objects. Required for more complex packages.
  * Contents of JSON files are now checked for an odd number of double-quotes
  * All backslashes in JSON files are converted to slashes.
  * The user command ]TATIN.Version now takes an optional argument like https://tatin.dev
  * The "Assets" package config parameter now accepts several names separated by commas  
  * Tags must be separated by commas rather than semicolons, bringing them im line with "api" and "assets"\\\\
    ";" are still supported though, but automatically converted to ",".
  * Bug fixes:
    * Multiple, comma-separated  assets were not handled correctly
    * Multiple, comma-separated assignments to "api" were not handled correctly
    * Files and directories were left behind in the temp/ folder 
    * A patch like "123-bata-1" caused trouble.
    * Build numbers should be separated from patch by a "+" rather than a "."
* 0.20.0 ⋄ 2021-02-03
  * Enhanced API key-syntax implemented.
  * Documentation updated.
  * Bug fixes
    * Columns header of ListRegistries were wrong whith the -all flag
    * Problem fixed with trailing slash when calling LINK.Import on a folder (really!).
* 0.19.4 ⋄ 2021-02-01
  * Both the `]TATIN.LoadPackage` and `]TATIN.InstallPackage` user commands report extensively to the session now
    in order to keep the user entertained.
  * Several error messages improved.
  * Recognizing whether a Tatin command was called as a user command or an API call is now fully independent
    from the user command framework.
  * The `]TATIN.ListRegistries` now also prints the priority data. 
  * The `TATIN.Publish` command can now process a folder hosting a package, not just a package ZIP file.
  * Documentation updated.
  * Bug fixes
    * Sorting oder of packages was incorrect (lowercase/uppercase problem)
    * Whether the URL or path in the user configuration file carries a trailing slash (or backslash) does not
      matter any more.
    * A user config file with backslashes (a path on Windows) crashed Tatin because the \\ is the JSON escape char.
    * The column headers for the `]TATIN.ListRegistries` user commands were inverted.
    * Problem fixed with trailing slash when calling LINK.
* 0.19.3 ⋄ 2021-01-29
  * In recent versions of Dyalog for Linux and Mac-OS the environment variable DYALOG_NET_CORE is not required
    anymore: a default value of 1 is taking place then. Therefore Tatin now checks whether it is defined and
    carries a value of 0, in which case Tatin cannot run.
* 0.19.2 ⋄ 2021-01-28
  * ReloadWorkpace was buggy
  * Packages with build numbers caused issues 
* 0.19.1 ⋄ 2021-01-27
  * Bug fix regarding WindowsEventLog
* 0.19.0
  * New function `CheckForBetterVersion` now reports on whether there are better versions of any top-level package.
  * `Install` and `Load` now report to the session from which Registry they will fetch the package in case the
     the user did not specify a particular Registry.
  * `ListRegistries` now orders the data by priority.
  * The new user command ]TATIN.Init as well as the new API function Tatin.Init allow a user to re-establish the 
    latest version of the user settings in a running Dyalog session.
  * The version of Dyalog APL used to run the Server is now shown in the HTML footer.
  * Reporting threads in `OnHouseKeeping` improved.
* 0.18.0
  * Tatin now logs actions on application level in addition to communication level (optional).
  * "ReloadWorkspace" now makes sure that all threads are processed before `⎕LOAD` is executed, and
    prevents anybody from connecting to Tatin in between.
  * When running in test mode the REST command `v1/list-commands` is now accepted and processed.
  * Error message clarified when the specified protocol (like http:// rather than https://) lead to an HTTP error.
  * `Pack` now creates the folder `targetPath` is pointing to if it does not exist yet.
  * Message improved in case the API of a package cannt be established (Client)
  * Documentation improved: Server installation
  * INI file was processed over and over again. Should only be processed when changed on disk after instantiation. 
