* 0.31.1 ⋄ 2021-03-09
  * The server injected correctly the publishing data into the package config file but did not overwrite
    the package config file within the ZIP of of that package, leaving it without "data" set.
* 0.31.0 ⋄ 2021-03-01
  * New Client function `UninstallPackage` is available now.
  * New INI entry `MinimumTatinVersion` introduced. 
  * Class `UserSettings` polished
  * Bug fixes
    * `CheckBuidlList` called `SaveBuildList` without the new, additional "alias".
* 0.30.0 ⋄ 2021-02-28
  * BREAKING CHANGES: 
    * The code of a package is now loaded into a sub-namespace `code`. As a consequence package globals 
      (like ∆HOME etc) must be addressed with `##.`
    * The user must now specify `source` in a package config file, otherwise an error is thrown. 
    * The `UserSettings` class was re-designed
    * The user settings file was moved from \\Local to \\Roaming (Windows only)
  * The property `alias` has been removed from the package config parameters\\\\
  * When loading or installing a package, and alais might be specified
  * When a package is published, "date" in the package config file is set by the server
  * In case Tatin cannot find the required Conga DLLs a helpful error message is printed to ⎕SE
  * The "special message" on the web pages is not printed anymore
  * Bug fixes
    * `]TATIN.PackageConfig` returned a matrix when it shouldn't
    * Checking the API for valid APL names failed in case the definition contained at least one comma
    * Failing checks on tags did not report what character was invalid
    * `⎕IO`, `⎕ML` and `⎕WX` inb a package config file are now scalars
* 0.22.2 ⋄ 2021-02-11
  * One may now specify just one of:
    * a package name 
    * group and package name
    * group, package name and major number
    * group, package name, major and minor number (without a Registry)
    ... and Tatin would work out first the Registry and then the best version.
  * ListTags prompts the user for a Registry now in the same way LoadPackage already did.
  * Bug fixes:
    * LoadPackage carried out a buggy check on a target namespace, resulting in # being rejected.
* 0.22.1 ⋄ 2021-02-09
  * `io`, `ml` and `wx` added to package config files.
  * Packages may be loaded into # now.
  * Result returned by `LoadDependencies` has changed: now package IDs of all top-level packages.
  * Bug fixes
    * Loading a ZIP file with dependencies was buggy.
    * A help request for ]LoadPackage crashed.
* 0.21.1 ⋄ 2021-02-07
  * The home page now offers a list with literally all packages
  * Defining the "api" of a package is much more flexible now since you can now specify multiple comma-
    separated objects. Required for more complex packages.
  * Contents of JSON files are now checked for an odd number of double-quotes
  * All backslashes in JSON files are converted to slashes.
  * The user command ]TATIN.Version now takes an optional argument like https://tatin.dev
  * The "Assets" package config parameter now accepts several names separated by commas  
  * Tags must be separated by commas rather than semicolons, bringing them im line with "api" and "assets"\\\\
    ";" are still supported though, but automatically converted to ",".
  * Bug fixes:
    * Multiple, comma-separated  assets were not handled correctly
    * Multiple, comma-separated assignments to "api" were not handled correctly
    * Files and directories were left behind in the temp/ folder 
    * A patch like "123-bata-1" caused trouble.
    * Build numbers should be separated from patch by a "+" rather than a "."
* 0.20.0 ⋄ 2021-02-03
  * Enhanced API key-syntax implemented.
  * Documentation updated.
  * Bug fixes
    * Columns header of ListRegistries were wrong whith the -all flag
    * Problem fixed with trailing slash when calling LINK.Import on a folder (really!).
* 0.19.4 ⋄ 2021-02-01
  * Both the `]TATIN.LoadPackage` and `]TATIN.InstallPackage` user commands report extensively to the session now
    in order to keep the user entertained.
  * Several error messages improved.
  * Recognizing whether a Tatin command was called as a user command or an API call is now fully independent
    from the user command framework.
  * The `]TATIN.ListRegistries` now also prints the priority data. 
  * The `TATIN.Publish` command can now process a folder hosting a package, not just a package ZIP file.
  * Documentation updated.
  * Bug fixes
    * Sorting oder of packages was incorrect (lowercase/uppercase problem)
    * Whether the URL or path in the user configuration file carries a trailing slash (or backslash) does not
      matter any more.
    * A user config file with backslashes (a path on Windows) crashed Tatin because the \\ is the JSON escape char.
    * The column headers for the `]TATIN.ListRegistries` user commands were inverted.
    * Problem fixed with trailing slash when calling LINK.
* 0.19.3 ⋄ 2021-01-29
  * In recent versions of Dyalog for Linux and Mac-OS the environment variable DYALOG_NET_CORE is not required
    anymore: a default value of 1 is taking place then. Therefore Tatin now checks whether it is defined and
    carries a value of 0, in which case Tatin cannot run.
* 0.19.2 ⋄ 2021-01-28
  * ReloadWorkpace was buggy
  * Packages with build numbers caused issues 
* 0.19.1 ⋄ 2021-01-27
  * Bug fix regarding WindowsEventLog
* 0.19.0
  * New function `CheckForBetterVersion` now reports on whether there are better versions of any top-level package.
  * `Install` and `Load` now report to the session from which Registry they will fetch the package in case the
     the user did not specify a particular Registry.
  * `ListRegistries` now orders the data by priority.
  * The new user command ]TATIN.Init as well as the new API function Tatin.Init allow a user to re-establish the 
    latest version of the user settings in a running Dyalog session.
  * The version of Dyalog APL used to run the Server is now shown in the HTML footer.
  * Reporting threads in `OnHouseKeeping` improved.
* 0.18.0
  * Tatin now logs actions on application level in addition to communication level (optional).
  * "ReloadWorkspace" now makes sure that all threads are processed before `⎕LOAD` is executed, and
    prevents anybody from connecting to Tatin in between.
  * When running in test mode the REST command `v1/list-commands` is now accepted and processed.
  * Error message clarified when the specified protocol (like http:// rather than https://) lead to an HTTP error.
  * `Pack` now creates the folder `targetPath` is pointing to if it does not exist yet.
  * Message improved in case the API of a package cannt be established (Client)
  * Documentation improved: Server installation
  * INI file was processed over and over again. Should only be processed when changed on disk after instantiation. 



