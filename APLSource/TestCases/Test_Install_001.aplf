 r←Test_Install_001(stopFlag batchFlag);⎕TRAP;qdmx
 ;dir;src;zip;body;cfg;zipfile;installFolder;list;src2
⍝ Try to install the same package twice: rejected.
⍝ One has to uninstall first
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX P.GetTatinRootSpace'#'
 #.⎕SHADOW'TEMP' ⋄ 'TEMP'#.⎕NS'' ⍝ Used to load stuff into
 dir←GetTempDir ⍬
 (src zip)←(⊂dir,'/'),¨'src' 'reg'
 src2←src,'/APLSource/'
 F.MkDir src2 zip

 body←':Class Constants' '∇r←PI' 'r←3.14' '∇' ':EndClass'
 (⊂body)F.NPUT src2,'/Constants.aplc'
 body←':Class: Calc:Constants' '∇r←Times v' 'r←×/v' '∇' ':EndClass'
 (⊂body)F.NPUT src2,'/Calc.aplc'
 (⊂'# Foo' 'Some paragraph')F.NPUT src,'/ReadMe.md'
 cfg←P.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Constants' '0.1.0'
 cfg.source←'APLSource'
 cfg P.WritePackageConfigFile src
 zipfile←P.Pack src zip

 installFolder←GetTempDir'/Tatin_AppPackages'
 list←P.InstallPackage('file://',zipfile)installFolder

 →T.GoToTidyUp 1≠≢list
 →T.GoToTidyUp 3≠≢⊃F.Dir installFolder,'/*'

 F.DeleteFile src,'/ReadMe.md'   ⍝ Compromise the installation

 :Trap 98
     {}P.InstallPackage('file://',zipfile)installFolder
     →T.GoToTidyUp 1
 :Else
     qdmx←⎕DMX
     →T.GoToTidyUp~'Installation folder is not empty'∆LazyMatch qdmx.EM
 :EndTrap

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 #.⎕EX P.GetTatinRootSpace'#'
⍝Done
