 r←Test_BuildPackage_050(stopFlag batchFlag);⎕TRAP;zipFileName;list;cfg;cfg2;oldBuildNo;newBuildNo;oldVersion;newVersion;parms;tempPath;path
⍝ Build a package that has dependencies in a non-default folder and is a Cider project
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 tempPath←∆GetTempDir'/'
 path←∆GetProjectPath,'/TestData/Build/CiderProject/'
 tempPath ⎕NCOPY path
 tempPath,←'CiderProject/'
 cfg←TC.ReadPackageConfigFile tempPath,'apl-package.json'
 parms←TC.CreateBuildParms tempPath
 parms.targetPath←tempPath
 parms.version←'+0.0.1'
 zipFileName←TC.BuildPackage parms
 list←TC.ZipArchive.ListZipContents zipFileName
 →T.GoToTidyUp~(⊂F.EnforceSlash'apl-dependencies.txt')∊F.EnforceSlash¨list
 cfg2←TC.ReadPackageConfigFile tempPath,'apl-package.json'
 oldBuildNo←A.ToNum{⍵↓⍨⍵⍳'+'}cfg.version
 newBuildNo←A.ToNum{⍵↓⍨⍵⍳'+'}cfg2.version
 →T.GoToTidyUp newBuildNo≠1+oldBuildNo
 (oldVersion newVersion)←{⍵↑⍨⌊/¯1+⍵⍳'+-'}¨cfg.version cfg2.version
 ⍝ Here we check only for a change, increasing the version number has its own (exhaustive) test:
 →T.GoToTidyUp oldVersion≡newVersion

 r←T._OK

∆TidyUp:
 F.DeleteFile zipFileName
 F.RmDir tempPath
⍝Don
