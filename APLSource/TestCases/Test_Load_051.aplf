 r←Test_Load_051(stopFlag batchFlag);⎕TRAP;rc;msg;zipFilename;toBeDeleted
 ;dir;src;body;cfg;reg;list;index;expected;zipped;src2;src3;refs
⍝ Publish 2 packages consisting of single fn with the second depending on the first.
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 r←T._Failed

 #.⎕EX TC.GetTatinRootSpace'#'
 #.⎕SHADOW'TEMP' ⋄ 'TEMP'#.⎕NS'' ⍝ Used to load stuff into
 dir←∆GetTempDir ⍬
 (src reg)←(⊂dir,'/'),¨'src' 'reg'
 F.MkDir src reg
 F.MkDir src2←src,'/package_A'
 toBeDeleted←''

 TC.Reg.CreateRegistry reg
 TC.MyUserSettings.AddRegistry'[local2]',reg

 body←':Namespace Package_A' 'Times←{' '×/⍵' '}' ':EndNamespace'
 (⊂body)F.NPUT src2,'/Package_A.apln'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Package_A' '1.0.0'
 cfg.source←'Package_A.apln'
 cfg.api←'Package_A'
 cfg.os_win←1
 TC.WritePackageConfigFile src2 cfg
 (rc msg zipFilename)←TC.PublishPackage src2 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 src3←src,'/Times'
 F.MkDir src3
 body←'r←Times y' '  r←Package_A.Times y'
 (⊂body)F.NPUT src3,'/Times.aplf'
 cfg←TC.InitPackageConfig ⍬
 cfg.(group name version)←'Example' 'Times' '1.0.0'
 cfg.source←'Times.aplf'
 cfg.os_win←1
 TC.WritePackageConfigFile src3 cfg
 src3 TC.Dependencies.Add'Example-Package_A-1.0.0'
 (rc msg zipFilename)←TC.PublishPackage src3 reg
 toBeDeleted,←⊂zipFilename
 Assert 200=rc

 refs←TC.LoadPackages(reg,'/Example-Times-1.0.0')#.TEMP
 →T.GoToTidyUp 12≠#.TEMP.Times.Times 3 4

 r←T._OK

∆TidyUp:
 Assert 0=⊃F.RmDir dir
 Assert TC.MyUserSettings.RemoveRegistry'[local2]'
 F.DeleteFile toBeDeleted
 #.⎕EX TC.GetTatinRootSpace'#'
⍝Done
