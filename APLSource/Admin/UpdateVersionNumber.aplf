 {r}←{quietFlag}UpdateVersionNumber dummy;version;date;name;buff;build;major;minor;patch;buildID;wsPath;body;newVersion
⍝ If either `quietFlag` is 1 or the user answers "yes" when prompted this function does the following:
⍝ 1. It updates the "date" part of the function ##.Registry.Version
⍝ 2. It bumps the build ID, or catenates "+1" as the (new) build ID
 r←⍬
 quietFlag←{0<⎕NC ⍵:⍎⍵ ⋄ 0}'quietFlag'
 'Invalid right argument; must be one of 0 1 2 3)'⎕SIGNAL 11/⍨1≠+/type≡¨0 1 2 3
 (name version)←2↑##.Registry.Version
 date←10↑##.APLTreeUtils2.FormatDateTime ⎕TS
 :If quietFlag
 :OrIf 1 YesOrNo'Would you like to bump the build ID?'
     :If 3=version+.='.'
         (version buff)←{⍵{((¯1+⍵)↑⍺)(⍵↓⍺)}3⍳⍨+\'.'=⍵}version
         build←⍕1+⊃(//)⎕VFI buff
     :ElseIf 2=version+.='.'
     :AndIf '+'∊version
         (version buff)←{⍵{((⍵-1)↑⍺)(⍵↓⍺)}⍵⍳'+'}version
         build←⍕1+⊃(//)⎕VFI buff
     :Else
         build←'1'
     :EndIf
     version,←'+',⍕build
     'Missing dots in version number'Assert 2=version+.='.'
     'Some bits in the version number are empty when they must not'Assert 0∧.<≢¨'.'(≠⊆⊢)version
     body←##.Registry.⎕NR'Version'
     newVersion←'r←''',name,''' ''',version,''' ''',date,''''
     body←'r←''[^$]+'⎕R newVersion⊣body
     Assert' '=1↑0⍴##.Registry.⎕FX body
     wsPath←(⍕⎕THIS.##),'.Registry.Version'
     Assert 0<≢⎕SE.Link.Add wsPath
 :EndIf
⍝Done
