 {r}←{bumpBuild}MakeClient batchFlag;msg;F;targetPath;targetFolder;ts1;ts2;path;reg;_userSettings;list;zipFilename;zipContent;fileList;b;rc;more;en;myZip;parms;dirList;success;log;APL
⍝ This functions creates a new Tatin Client. It can be called from a developer's session (⍵←0) or
⍝ as part of an automated "Make" process with ⍵←1.\\
⍝ In case of a problem an error is thrown in case ⍵ is 0, and ⎕OFF 123 is executed in case ⍵ is 1.\\
⍝ You may call this function independently from `MakeServer`.\\
⍝ `bumpBuild` must be a Boolean; 1 means that the build number will be bumped; that's the default.
 r←⍬
 F←##.FilesAndDirs
 F.(APLTreeUtils2 OS)←##.(APLTreeUtils2 OS)
 bumpBuild←{0<⎕NC ⍵:⍎⍵ ⋄ 1}'bumpBuild'
 :If ~batchFlag
     ⎕←(⎕PW-1)⍴'-'
     msg←''
     msg,←⊂'This function will close all Cider projects, delete everything that is not needed in order to'
     msg,←⊂'use the Tatin client, re-arrange stuff and finally save the workspace together with'
     msg,←⊂'everything that is needed by the client in Dist/Client/Client.dws'
     msg,←⊂'The Tatin client will be copied from that WS into ⎕SE either once a Tatin user command is'
     msg,←⊂'invoked or by other means, like using a "Run" fn in 19.0 or setup.dyalog in earlier versions.'
     msg,←⊂''
     msg,←⊂'It also checks whether the user command script should be copied from the 19.0-64-specific program'
     msg,←⊂'folder to the project or vice versa, depending on where the last change was made.'
     msg,←⊂''
     msg,←⊂'In the last step all that''s required is zipped into <Tatin-Client-{major}.{Minor}.{Patch}.zip'
     msg,←⊂'That file is created within the Dist/ folder which is not managed by Git.'
     ⎕←⍪msg
     ⎕←''
 :EndIf
 :If batchFlag
 :OrIf 1 ##.Client.YesOrNo'Would you like to continue?'
     UpdateVersionNumber bumpBuild
     {}⎕SE.Cider.CloseProject''
     parms←⎕SE.Cider.CreateOpenParms ⍬
     parms.folder←#.Tatin.CiderConfig.HOME
     parms.projectSpace←'_Tatin'
     parms.batch←1
     parms.verbose←0
     (success log)←⎕SE.Cider.OpenProject parms
     Assert success
     {}⎕SE.Cider.CloseProject''
     ⎕LX←''
     #._Tatin.Admin.Initialize_Client
     #._Tatin.Client.⎕EX'MyUserSettings'
     #._Tatin.⎕EX¨'Server' 'Todo' 'TestCases' 'Simu' 'TestCasesServer' 'Tester2' 'CodeCoverage'
     #._Tatin.Admin.⎕FX'___Delete;CreateAllRefs_Client;EstablishClientInQuadSE;EstablishFunctionInAPI;InitConga' '⎕EX ⎕NL⍳16'
     #._Tatin.Admin.___Delete
     #._Tatin.⎕EX'CiderConfig'
     #._Tatin.⎕EX¨'APLProcess' 'HandleError' 'IniFiles' 'MarkAPL' 'SMTP' 'WindowsEventLog'  ⍝ Server only
     F.MkDir'Dist'
     targetPath←'Dist/Client'
     {}F.RmDirByForce targetPath
     ⎕DL 0.1
     F.MkDir targetPath
     ⎕DL 0.1
     ⎕WSID←targetPath,'/Tatin/Client'
     Assert F.MkDir targetPath,'/Tatin'
     Assert F.MkDir targetPath,'/Tatin/Maintenance'
     ⎕DL 0.1
     Assert F.IsDir targetPath,'/Tatin/Maintenance'
     #.⎕EX¨(' '~¨⍨↓#.⎕NL⍳16)~⊂'_Tatin'
     #.⎕EX'Make_'
     0 ⎕SAVE ⎕WSID   ⍝ If this crashes, in particular with "Reference in ⎕SE points to #" or vise versa) execute ⎕OFF 123 and try again
     targetFolder←#._Tatin.Client.GetProgramFilesFolder'CiderTatin/Tatin'
     targetFolder←'Dyalog[^U]*'⎕R'Dyalog APL-64 19.0 '⊢targetFolder
     :If ~batchFlag
     :AndIf F.IsFile targetFolder,'/Tatin/Tatin.dyalog'
     :AndIf (targetFolder,'/Tatin/Tatin.dyalog')F.YoungerThan'./APLSource/Tatin.dyalog'
     :AndIf ≢/{⊃⎕NGET ⍵}¨'./APLSource/Tatin.dyalog'(targetFolder,'/Tatin/Tatin.dyalog')
     :AndIf 1 ##.Client.YesOrNo'It appears that "Tatin.dyalog" in ',targetFolder,' is younger than the one in the project; copy over?'
         './APLSource/Tatin.dyalog'(⎕NCOPY⍠('IfExists' 'Replace')F.ExecNfunction)targetFolder,'/Tatin/Tatin.dyalog'
     :EndIf
     (targetPath,'/Tatin/Maintenance/')(⎕NCOPY⍠('Wildcard' 1)('IfExists' 'Replace')F.ExecNfunction)'./Maintenance/Client/*'
     (targetPath,'/Tatin')(⎕NCOPY⍠('IfExists' 'Replace')F.ExecNfunction)'./APLSource/Tatin.dyalog'
     'Create!'F.CheckPath targetPath,'/Tatin/Assets/Runtime'
     (targetPath,'/Tatin/Assets/Runtime/')(⎕NCOPY⍠('IfExists' 'Replace')F.ExecNfunction)'./Assets/Runtime/Rumba'
     'Create!'F.CheckPath targetPath,'/Tatin/Assets/docs'
     (targetPath,'/Tatin/Assets/docs/')(⎕NCOPY⍠('IfExists' 'Replace')F.ExecNfunction)'./html/ReleaseNotes.html'
     F.DeleteFile¨F.Dir'Dist/Tatin-Client-*.zip'
     zipFilename←'Dist/Tatin-Client-',({{⍵/⍨∧\⍵∊'.',⎕D}⍵/⍨3>+\'.'=⍵}(2⊃##.Client.Version)),'.zip'
     ⎕DL 0.1
     fileList←'recursive'F.ListFiles targetPath,'/'
     fileList←F.EnforceSlash¨(1+≢targetPath)↓¨fileList
     myZip←⎕NEW ##.ZipArchive(,⊂zipFilename)
     targetPath myZip.Add fileList
    ⍝targetPath ##.ZipArchive.ZipFolder zipFilename   ⍝ This causes potentially trouble on Linux and Mac OS because of the "\"
     myZip.Dispose
     ⎕DL 1
     zipContent←##.ZipArchive.ListZipContents zipFilename
     'Something went wrong with the ZIP file'Assert fileList{(∧/⍺∊⍵)∧(∧/⍵∊⍺)}zipContent
     3 ⎕NDELETE targetFolder,'/Tatin.dyalog'  ⍝ Because until 0.61.0 the user command script was a sibling of the Tatin/ folder
     :If batchFlag
         ⎕OFF
     :Else
         ⎕←'*** Done;  note that the Tatin project has been closed'
     :EndIf
 :EndIf
