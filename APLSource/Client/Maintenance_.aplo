 r←(fn Maintenance_)(path dry);folders;filename;data;json;data2;pkgName;zipFilename;zip;tempFolder;zipData
 r←''
 :If '.git'≢2⊃⎕NPARTS path,'/'
     filename←path,'/apl-package.json'
     :If ⎕NEXISTS filename
         data←⎕JSON⍠('Dialect' 'JSON5')⊢⊃F.NGET filename
         data2←⎕NS data
         data2←fn data2
         json←Reg.JSON data2
         :If ≢/Reg.JSON¨data2 data
             :If dry
                 r,←'Would be changed: ',filename,CR
             :Else
                 (⊂json)F.NPUT filename 1
                 r,←'Changed: ',filename,CR
             :EndIf
         :EndIf
         pkgName←data2.(group,'-',name,'-',{⍵↑⍨¯1+⍵⍳'+'}version)
         zipFilename←path,'/',pkgName,'.zip'
         :If ⎕NEXISTS zipFilename
             zip←⎕NEW ##.ZipArchive(,⊂zipFilename)
             :If (⊂'apl-package.json')∊zip.List
                 tempFolder←F.GetTempSubDir''
                 Assert'apl-package.json'zip.ExtractTo tempFolder
                 zipData←Reg.JSON⊃F.NGET tempFolder,'/apl-package.json'
                 :If json≢Reg.JSON zipData
                     :If dry
                         r,←'Would be changed: ',zipFilename,CR
                     :Else
                         zip.Delete'apl-package.json'
                         path zip.Add'apl-package.json'
                         r,←'Changed: ',zipFilename,CR
                     :EndIf
                 :EndIf
                 {}F.RmDirByForce tempFolder
             :EndIf
             zip.Dispose
         :EndIf
     :EndIf
 :EndIf
 :If 0<≢folders←(F.ListDirs path,'/')~⊂'.git'
     r,←∊fn{(⍺⍺ Maintenance_)⍵}¨(⊂¨folders),¨dry
 :EndIf
 ⍝Done
