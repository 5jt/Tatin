 list←{parms}ListTags y;client;request;res;uri;parms
⍝ `y` might be the path to a Registry or a Registry alias (embraced by []).\\
⍝ By default all tags of all packages are returned as a two-column matrix with
⍝ the tag in [;1] and the number of occurances in [;2].\\
⍝ Optionally `⍺` can be specified. Must be a namespace that might contain a variable `tags` which
⍝ may specify one or more tags (simple comma-separated text vector). If that is the case only
⍝ the tags are returned shared by the packages that carry the specified tag(s).
 :If 0=⎕NC'parms'
     parms←⎕NS''
     parms.tags←''
 :Else
     :If 0=parms.⎕NC'tags'
         parms.tags←''
     :EndIf
 :EndIf
 'Invalid left argument: only "tags" is permitted'Assert∧/(' '~¨⍨↓parms.⎕NL 2)∊,⊂'tags'
 parms.tags←⎕C parms.tags
 uri←ReplaceRegistryAlias y
 'No (valid) Registry specified?!'Assert 0<≢uri
 :If Reg.IsHTTP uri
     list←parms ListTags_ uri
 :Else
     list←Reg.ListTags uri parms
 :EndIf
⍝Done
