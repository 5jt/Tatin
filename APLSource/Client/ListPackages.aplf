 list←{parms}ListPackages y;client;request;res;uri;parms
⍝ `y` might be tha path to a Registry or a Registry alias (embraced by []).\\
⍝ By default all packages saved in that Registry are returned.\\
⍝ Optionally ⍺ can be specified. Must be namespace that might contain the variables "group" and/or "tags"
⍝   * "group" may specify the group
⍝   * "tags" may specify one or more tags (simple comma-separated text vector)
 :If 0=⎕NC'parms'
     parms←⎕NS''
     parms.(group tags)←⊂''
 :Else
     :If 0=parms.⎕NC'group'
         parms.group←''
     :EndIf
     :If 0=parms.⎕NC'tags'
         parms.tags←''
     :EndIf
 :EndIf
 'Invalid left argument: only "group" and "tags" are permitted'Assert∧/(' '~¨⍨↓parms.⎕NL 2)∊'group' 'tags'
 parms.(group tags)←⎕C¨parms.(group tags)
 uri←ReplaceRegistryAlias y
 'No (valid) Registry specified?!'Assert 0<≢uri
 :If Reg.IsHTTP uri
     list←parms ListPackages_ uri
 :Else
     list←Reg.ListPackages uri parms
 :EndIf
⍝Done
