 {r}←LinkDependencies refs;ref;deps;depNames;root;destinations;bool;depName;destination;cfgs;cfg
⍝ Takes a list of refs, typically returned by `LoadPackage`, and establishes any required references
⍝ to dependencies within those refs.
⍝ `api` rules, but if it's empty then `name` is taken instead.
 r←⍬
 root←{GetTatinRootSpace 1⊃⍵}⍣(0<≢refs)⊣refs
 :For ref :In refs
     ref←CheckWsPaths ref
     :If 0<≢deps←Dependencies.Get⊃{0=≢⍺:⍵ ⋄ ⍺}/ref.(∆HOME ∆URI)
         deps←ReplaceRegistryAlias¨deps
         destinations←GetPackageIDFromFilename¨deps
         destinations←(⊂root,'.'),¨Reg.EnforceAPL_Name¨destinations
         destinations←CheckWsPaths¨destinations
         cfgs←Reg.JSON¨destinations⍎¨⊂'∆CONFIG'
         :For cfg :In cfgs
             :If 0<≢cfg.source
             :AndIf (⊂3⊃⎕NPARTS cfg.source)∊'.aplf' 'aplo'
                 depNames←⊂2⊃⎕NPARTS cfg.source
             :Else
                 depNames←{⍵↑⍨¯1+⍵⍳'-'}∘{⍵↓⍨⍵⍳'-'}¨GetPackageIDFromFilename¨deps
             :EndIf
             depNames{0=≢⍵.api:⍺ ⋄ ⍵.api}¨←cfgs
             depNames ref.{⍎'⎕THIS.',⍺,'←',⍵}¨destinations,¨'.',¨depNames
         :EndFor
     :EndIf
 :EndFor
⍝Done
