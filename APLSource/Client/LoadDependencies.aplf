 {refs}←LoadDependencies(installFolder targetSpace);path;tree;dep2;saveIn;cfg;msg;packageID;saveIn2;ref;url;level;allRefs
⍝ Takes a folder with a build list, typically the result of installing packages.
⍝ Loads all packages according to that list and injects required references into `targetSpace`.
⍝ Returns a vector with references to **all** loaded packages, including dependencies.
 refs←allRefs←⍬
 'Target spave does not exist'Assert 9.1=⎕NC⊂⍕targetSpace
 CheckBuildList installFolder
 :If 0<≢tree←LoadBuildList installFolder
     :For level packageID url :In ↓tree
         path←installFolder,'/',packageID
         ('Cannot find package "',path,'"')Assert F.Exists path
         saveIn←GetTatinRootSpace targetSpace
         cfg←ReadPackageConfigFile path
         packageID←1 GetPackageIDFromFilename path
         saveIn,←'.',packageID
         :If 0=⎕NC saveIn
             msg←⎕SE.Link.Import saveIn(path,'/',cfg.source)
             'Link failed to import code'Assert'Imported:'{⍺≡(≢⍺)↑⍵}msg
             ref←⍎saveIn
             ref.∆URI←cfg.uri
             ref.∆HOME←path
             allRefs,←ref
             :If 1=level
                 refs,←ref
             :EndIf
         :EndIf
         :If 1=level
             cfg LinkTargetToPackage saveIn targetSpace
         :EndIf
     :EndFor
     LinkDependencies allRefs
 :EndIf
⍝Done
