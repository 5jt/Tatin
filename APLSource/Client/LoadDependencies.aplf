 {r}←LoadDependencies(installFolder targetSpace);path;tree;dep2;saveIn;cfg;msg;packageID;saveIn2;ref;url;level;refs;alias
⍝ Takes a folder with a build list, typically the result of installing packages.
⍝ Loads all packages according to that list and injects required references into `targetSpace`.
⍝ Returns a vector with references to the loaded packages (no dependencies, top-level only).
⍝ Might be empty if the package was already loaded, for example as a dependency.
 r←refs←⍬
 targetSpace←⍕targetSpace
 :If 0=⎕NC targetSpace
     targetSpace ⎕NS''
 :EndIf
 CheckBuildList installFolder
 :If 0<≢tree←LoadBuildList installFolder
     :For level packageID url :In ↓tree
         (alias packageID)←{~'@'∊⍵:''⍵ ⋄ '@'(≠⊆⊢)⍵}packageID
         path←installFolder,'/',packageID
         ('Cannot find package "',path,'"')Assert F.Exists path
         saveIn←GetTatinRootSpace targetSpace
         cfg←ReadPackageConfigFile path
         packageID←1 GetPackageIDFromFilename path
         saveIn,←'.',packageID
         :If 0=⎕NC saveIn   ⍝ Might already exist
             EstablishSystemVars saveIn cfg
             Reg.ImportWithQuadFIX(path,'/',cfg.source)(saveIn,'.code')
             ⍝ Unreliable: #253    msg←Reg.ImportWithLink(saveIn,'.code')(path,'/',cfg.source)
             ⍝'Link failed to import code'Assert'Imported:'{⍺≡(≢⍺)↑⍵}msg
             ref←⍎saveIn
             EstablishConstants ref cfg path
             refs,←ref
             :If 1=level
                 r,←ref
             :EndIf
         :EndIf
         :If 1=level
             LinkTargetToPackage cfg saveIn targetSpace alias
         :EndIf
     :EndFor
     LinkDependencies refs
 :EndIf
⍝Done
