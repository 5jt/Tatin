## Overview

This is _not_ an introduction to Tatin. For that refer to https:// ... 

It helps with using either the Tatin API or the Tatin user commands.

## What is the difference between the API and the user commands?

* The user command assist a programmer during development. 

* The API functions allow a programmer to call certain functions under program control

The user commands can be brought into `⎕SE` with the `]Tatin.Ini` user command. This will also make the API
available. If you want to bring the API inthe `⎕SE` under program control your are advised to use the 
`Setup.dyalog` functionality of SALT or the `LOAD` / `LX` mechanism introduced in 18.0

## The API

The API comprises functions that allow...

* loading packages for temporary investigation (`LoadPackage`)
* installing packages for permanent usage (`InstallPackage` and `LoadDependencies`)
* load all packages as well as any dependencies) defined for a particular application (`LoadDependencies`)

In addition it offers two classes for creating a Registry object (`DefineRegistry`) and managing a collection
of such Registries plus other settings (`UserSettings`).

Many functions rely on the availability of an instance of the `UserSettings` class under 
the name `_UserSettings` within the namespace `⎕SE._Tatin`. This can be ensured by calling ⌹⌹⌹⌹⌹⌹⌹⌹⌹⌹⌹⌹

In order to investigate what packages are managed by a given registry these functions may be used:

* `ListRegistries` to list all Registries available to you
* `ListPackages` to list the packages managed by a particular Registry
* `ListVersions` to list the versions of a particular package managed by a particular Registry
  
For publishing packages the functions `InitialPackage`, `Pack` and `PublishPackage` will be used frequently.
                             
## User commands

This is _not_ a reference for the Tatin user commands: although the user commands do use the API, the syntax is 
very different.

For a list of all commands available enter this into the session:

]tatin -?

For information regarding a particular command (say "Publish") enter this into the sesion:

]Tatin.Publish -?  

## Help

This document can be put on display by calling the API function `⎕SE.Tatin.Help`

Help regarding a particular user command or API function is available as well:

* `]tatin.help  command_name`
* ⎕SE.TatinHelpOnSyntax '<function_name>`
