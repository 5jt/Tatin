 r←{noBetas}ReinstallDependencies y;installFolder;registry;deps;refs;noBetas
⍝ Takes a folder that hosts a file apl-dependencies.txt as mandatory argument.\\
⍝ The file apl-buildlist.json as well as all directories in that folder will be deleted.
⍝ Then all packages listed in the file apl-dependencies.txt are re-installed from scratch.\\
⍝ Note that a package with a higher major version number is considered a different package.\\
⍝ By default all known Registries with a priority greater than ¯1 are scanned, but you may
⍝ specify a particular Registry as a second (optional) argument.\\
⍝ By default no beta versions are installed. You may change this by specifying a 0 as left argument.
 r←''
 noBetas←{0<⎕NC ⍵:⍎⍵ ⋄ 1}'noBetas'
 y←⊆y
 (installFolder registry)←2↑y,(≢y)↓'' ''
 'Mandatory argument (install directory) must not be empty'Assert 0<≢installFolder
 installFolder←'apl-dependencies.txt'{⍵↓⍨(-≢⍺)×⍺≡⎕C(-≢⍺)↑⍵}installFolder
 'Not a directory'Assert F.IsDir installFolder
 'Directory does not host a file apl-dependencies.txt'Assert F.IsFile installFolder,'/apl-dependencies.txt'
 deps←⊃F.NGET(installFolder,'/apl-dependencies.txt')1
 'Dependency file is empty'Assert 0<≢deps
 F.DeleteFile installFolder,'apl-buildlist.json'              ⍝ Delete the build list
 F.RmDir F.ListDirs installFolder,'/'                         ⍝ Delete all sub folder
 PrintToSession(⎕PW-1){⍺↑'--- ',⍵,' ',⍺⍴'-'}'Re-installing packages in ',installFolder,' with',(noBetas/'out'),' any beta versions'
 refs←ReinstallDependencies_ deps installFolder registry noBetas
⍝Done
