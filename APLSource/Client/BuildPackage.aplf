 zipFilename←{dependencyFolder}BuildPackage(projectPath targetPath version);cfg;fileList;zipObj;tempFilename;deps;errMsg;cfg_;dependencies
 ⍝ projectPath → folder to create the package from.\\
 ⍝ targetPath  → folder where the resulting ZIP is saved.\\
 ⍝ The targetPath defaults to the projectPath if it is empty.\\
 ⍝ `version`
 dependencyFolder←{0<⎕NC ⍵:⍎⍵ ⋄ ''}'dependencyFolder'
 :If 0=≢projectPath
     projectPath←F.PWD,'/'
 :EndIf
 projectPath←RemoveFileProtocol projectPath
 projectPath←⊃1 ⎕NPARTS projectPath,'/'
 targetPath←Reg.AddSlash RemoveFileProtocol projectPath{⍺{0=≢⍵:⍺ ⋄ ⍵}⍎⍵ ⋄ ⍺}'targetPath'
 targetPath←⊃1 ⎕NPARTS targetPath
 cfg_←ReadPackageConfigFile projectPath
 cfg←InitPackageConfig cfg_
 ValidateConfig cfg projectPath
 :If 0<≢version
     :If '+'=1↑version
         cfg.version←version AddToVersion cfg.version
     :Else
         cfg.version←version{'+'∊⍺:⍺ ⋄ ⍺,{⍵↓⍨¯1+⍵⍳'+'}⍵}cfg.version ⍝ Assign version but preserve build no if not passed
     :EndIf
 :EndIf
 cfg.version←IncreaseBuildNumber cfg.version
 :If ≢/{⎕JSON⍠('Dialect' 'JSON5')⊣⍵}¨cfg cfg_
     WritePackageConfigFile projectPath cfg
 :EndIf
 dependencies←dependencyFolder EstablishPackageDependencies projectPath
 zipFilename←F.ExpandPath targetPath,(GetPackageFilenameFromCfg cfg),'.zip'
 :If 0=F.Exists targetPath
     F.MkDir targetPath
 :Else
     F.DeleteFile zipFilename
 :EndIf
 zipObj←⎕NEW ZipArchive(,⊂zipFilename)
 fileList←projectPath GetAllFiles cfg
 'No source code?!'Assert 0<≢fileList
 projectPath zipObj.Add fileList
 projectPath zipObj.Add CFG_Name
 :If 0<≢cfg.assets
     {projectPath zipObj.Add ⍵}¨','(≠⊆⊢)cfg.assets
 :EndIf
 :If 0<cfg.⎕NC'userCommandScript'
 :AndIf 0<≢cfg.userCommandScript
     :If F.IsFile projectPath,cfg.userCommandScript
         (projectPath,⊃⎕NPARTS cfg.userCommandScript)zipObj.Add⊃,/1↓⎕NPARTS cfg.userCommandScript
         zipObj.Delete cfg.userCommandScript
     :Else
         zipObj.Dispose
         ⎕DL 0.2
         3 ⎕NDELETE zipFilename
         ('Not found: ',cfg.userCommandScript)Assert 0
     :EndIf
 :EndIf
 :If 0<≢dependencies
     (projectPath,dependencies)zipObj.Add'/apl-dependencies.txt'
 :ElseIf F.IsFile projectPath,'apl-dependencies.txt'
     projectPath zipObj.Add'apl-dependencies.txt'
 :EndIf
 zipObj.Dispose
⍝Done
