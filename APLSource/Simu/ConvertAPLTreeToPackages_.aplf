 {r}←ConvertAPLTreeToPackages_(fullPath homeFolder targetFolder);dependencyFile;tempDir;dependencyVersions
 ;path;filename;name;configFilename;parms;version;majore;minor;patch;buff;dependencies;devOnly;cfg;PackageID
 r←⍬
 (path filename name)←{(1⊃⍵)(⊃,/1↓⍵)(2⊃⍵)}⎕NPARTS fullPath
 tempDir←F.GetTempSubDir⊃⎕SI
 F.RmDir tempDir ⋄ F.MkDir tempDir
 configFilename←homeFolder,name,'/publish.config'
 :If F.IsFile configFilename
     parms←⎕XML'flat'A.ReadUtf8File configFilename
     version←parms GetValueFromXml'version'
     (majore minor patch)←'.'(≠⊆⊢)version
     buff←parms GetChildrenFromXml'needs'
     dependencies←buff[;3]
     devOnly←{0=≢⍵:0 ⋄ 'true'≡⎕C⊃⍵[;2]}¨{⍵⌿⍨⍵[;1]≡¨⊂'development'}¨buff[;4]
     cfg←P.InitPackageConfig ⍬
     cfg.source←filename
     cfg.(group name version)←'aplteam'name version
     cfg.api←name
     cfg.description←parms GetValueFromXml'desc'
     cfg.tags←A.DMB ⎕C parms GetValueFromXml'tags'
     cfg.project_url←'https://github.com/',cfg.group,'/',name
     cfg P.WritePackageConfigFile tempDir
     {0≠⊃⍵:.}fullPath F.CopyTo tempDir,'/'
     :If 0<≢dependencies
         ⍝ Only for a JSON dependency file: ns←⎕NS''
         dependencies←2⊃∘⎕NPARTS¨{⍵/⍨F.IsFile¨⍵}path∘,¨⊃,/{(⊂⍵),¨'.aplc' '.apln' '.dyalog'}¨dependencies
         ⍝ Only for a JSON dependency file: ns←dependencies ns.{r←⎕NS'' ⋄ r.name←⍺ ⋄ r.developmentOnly←⍵ ⋄ r}¨devOnly
         dependencyVersions←homeFolder∘GetVersionFor¨dependencies
         tempDir P.Dependencies.Add dependencies{'aplteam-',⍺,'-',⍵}¨dependencyVersions
     :EndIf
     PackageID←'aplteam-',name,'-',version
     F.MkDir targetFolder,PackageID
     tempDir Reg.DotNetZip.ZipFolder(targetFolder,PackageID,'/',PackageID,'.zip')
     (targetFolder,PackageID,'/')⎕NMOVE tempDir,'/apl-package.json'
     dependencyFile←tempDir,'/',##.Registry.DependenciesFilename
     :If F.Exists dependencyFile
         (targetFolder,PackageID,'/')⎕NMOVE dependencyFile
     :EndIf
     F.MkDir targetFolder,PackageID,'/data'
     (targetFolder,PackageID,'/data/')⎕NMOVE⍠('Wildcard' 1)⊣tempDir,'/*'
     F.RmDir tempDir
 :EndIf
